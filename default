# Definisi zona rate limit (ini sudah benar sesuai rate yang diminta)
limit_req_zone $binary_remote_addr zone=threads_zone:10m rate=90r/m;

# Default server configuration
#
server {

        # SSL configuration
        #
        # listen 443 ssl default_server;
        # listen [::]:443 ssl default_server;
        #
        # Note: You should disable gzip for SSL traffic.
        # See: https://bugs.debian.org/773332
        #
        # Read up on ssl_ciphers to ensure a secure configuration.
        # See: https://bugs.debian.org/765782
        #
        # Self signed certs generated by the ssl-cert package
        # Don't use them in a production server!
        #
        # include snippets/snakeoil.conf;

        root /var/www/html;

        # Add index.php to the list if you are using PHP
        index index.html index.htm index.nginx-debian.html;

        server_name curvy-laws-worry-freely.a276.dcdg.xyz www.curvy-laws-worry-freely.a276.dcdg.xyz;

        # Lokasi ini akan menangani semua permintaan umum, 
        # termasuk /threads/{id}, /threads/{id}/comments, dll.
        # Tidak ada rate limit spesifik di sini.
        location / {
                proxy_pass http://localhost:5000; # your app's port
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_cache_bypass $http_upgrade;
        }

        location = /threads { # Menggunakan '=' untuk pencocokan eksak
                limit_req zone=threads_zone burst=20 nodelay; # Menggunakan burst=20 seperti di konfigurasi Anda
                limit_req_status 429;
                
                proxy_pass http://localhost:5000; # your app's port
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_cache_bypass $http_upgrade;
        }

        # pass PHP scripts to FastCGI server
        #
        #location ~ \.php$ {
        #       include snippets/fastcgi-php.conf;
        #
        #       # With php-fpm (or other unix sockets):
        #       fastcgi_pass unix:/run/php/php7.4-fpm.sock;
        #       # With php-cgi (or other tcp sockets):
        #       fastcgi_pass 127.0.0.1:9000;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #       deny all;
        #}

    listen [::]:443 ssl ipv6only=on; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/curvy-laws-worry-freely.a276.dcdg.xyz/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/curvy-laws-worry-freely.a276.dcdg.xyz/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot


}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#       listen 80;
#       listen [::]:80;
#
#       server_name example.com;
#
#       root /var/www/example.com;
#       index index.html;
#
#       location / {
#               try_files $uri $uri/ =404;
#       }
#}

server {
    if ($host = www.curvy-laws-worry-freely.a276.dcdg.xyz) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = curvy-laws-worry-freely.a276.dcdg.xyz) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


        listen 80 default_server;
        listen [::]:80 default_server;

        server_name curvy-laws-worry-freely.a276.dcdg.xyz www.curvy-laws-worry-freely.a276.dcdg.xyz;
    return 404; # managed by Certbot
}
